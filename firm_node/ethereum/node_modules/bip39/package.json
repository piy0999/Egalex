{
  "_args": [
    [
      {
        "raw": "bip39@^2.2.0",
        "scope": null,
        "escapedName": "bip39",
        "name": "bip39",
        "rawSpec": "^2.2.0",
        "spec": ">=2.2.0 <3.0.0",
        "type": "range"
      },
      "/Users/wali/Desktop/Dev/ethereumdev/Egalex/node_modules/truffle-hdwallet-provider"
    ]
  ],
  "_from": "bip39@>=2.2.0 <3.0.0",
  "_id": "bip39@2.5.0",
  "_inCache": true,
  "_location": "/bip39",
  "_nodeVersion": "9.2.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/bip39-2.5.0.tgz_1515240615260_0.9369987044483423"
  },
  "_npmUser": {
    "name": "dcousens",
    "email": "npm@dcousens.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "bip39@^2.2.0",
    "scope": null,
    "escapedName": "bip39",
    "name": "bip39",
    "rawSpec": "^2.2.0",
    "spec": ">=2.2.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/truffle-hdwallet-provider"
  ],
  "_resolved": "https://registry.npmjs.org/bip39/-/bip39-2.5.0.tgz",
  "_shasum": "51cbd5179460504a63ea3c000db3f787ca051235",
  "_shrinkwrap": null,
  "_spec": "bip39@^2.2.0",
  "_where": "/Users/wali/Desktop/Dev/ethereumdev/Egalex/node_modules/truffle-hdwallet-provider",
  "author": {
    "name": "Wei Lu"
  },
  "bugs": {
    "url": "https://github.com/weilu/bip39/issues"
  },
  "contributors": [
    {
      "name": "Daniel Cousens",
      "email": "email@dcousens.com",
      "url": "http://dcousens.com"
    }
  ],
  "dependencies": {
    "create-hash": "^1.1.0",
    "pbkdf2": "^3.0.9",
    "randombytes": "^2.0.1",
    "safe-buffer": "^5.0.1",
    "unorm": "^1.3.3"
  },
  "description": "Bitcoin BIP39: Mnemonic code for generating deterministic keys",
  "devDependencies": {
    "node-fetch": "^1.6.3",
    "nyc": "^8.3.0",
    "proxyquire": "^1.7.10",
    "standard": "^10.0.2",
    "tape": "^4.6.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-xwIx/8JKoT2+IPJpFEfXoWdYwP7UVAoUxxLNfGCfVowaJE7yg1Y5B1BVPqlUNsBq5/nGwmFkwRJ8xDW4sX8OdA==",
    "shasum": "51cbd5179460504a63ea3c000db3f787ca051235",
    "tarball": "https://registry.npmjs.org/bip39/-/bip39-2.5.0.tgz"
  },
  "gitHead": "bafbcd352a6a5275bbc640a79c3917d0baee5bc8",
  "homepage": "https://github.com/weilu/bip39#readme",
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "weilu",
      "email": "luwei.here@gmail.com"
    },
    {
      "name": "dcousens",
      "email": "email@dcousens.com"
    }
  ],
  "name": "bip39",
  "optionalDependencies": {},
  "readme": "# BIP39\n\n[![Build Status](https://travis-ci.org/bitcoinjs/bip39.png?branch=master)](https://travis-ci.org/bitcoinjs/bip39)\n[![NPM](https://img.shields.io/npm/v/bip39.svg)](https://www.npmjs.org/package/bip39)\n\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\n\nJavaScript implementation of [Bitcoin BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki): Mnemonic code for generating deterministic keys\n\n## Reminder for developers\n\n***Please remember to allow recovery from mnemonic phrases that have invalid checksums (or that you don't have the wordlist)***\n\nWhen a checksum is invalid, warn the user that the phrase is not something generated by your app, and ask if they would like to use it anyway. This way, your app only needs to hold the wordlists for your supported languages, but you can recover phrases made by other apps in other languages.\n\nHowever, there should be other checks in place, such as checking to make sure the user is inputting 12 words or more separated by a space. ie. `phrase.trim().split(/\\s+/g).length >= 12`\n\n\n## Examples\n``` js\n// Generate a random mnemonic (uses crypto.randomBytes under the hood), defaults to 128-bits of entropy\nvar mnemonic = bip39.generateMnemonic()\n// => 'seed sock milk update focus rotate barely fade car face mechanic mercy'\n\nbip39.mnemonicToSeedHex('basket actual')\n// => '5cf2d4a8b0355e90295bdfc565a022a409af063d5365bb57bf74d9528f494bfa4400f53d8349b80fdae44082d7f9541e1dba2b003bcfec9d0d53781ca676651f'\n\nbip39.mnemonicToSeed('basket actual')\n// => <Buffer 5c f2 d4 a8 b0 35 5e 90 29 5b df c5 65 a0 22 a4 09 af 06 3d 53 65 bb 57 bf 74 d9 52 8f 49 4b fa 44 00 f5 3d 83 49 b8 0f da e4 40 82 d7 f9 54 1e 1d ba 2b ...>\n\nbip39.validateMnemonic(mnemonic)\n// => true\n\nbip39.validateMnemonic('basket actual')\n// => false\n```\n\n\n``` js\nvar bip39 = require('bip39')\n\n// defaults to BIP39 English word list\n// uses HEX strings for entropy\nvar mnemonic = bip39.entropyToMnemonic('00000000000000000000000000000000')\n// => abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about\n\n// reversible\nbip39.mnemonicToEntropy(mnemonic)\n// => '00000000000000000000000000000000'\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/weilu/bip39.git"
  },
  "scripts": {
    "coverage": "nyc --branches 100 --functions 100 --check-coverage npm run unit",
    "standard": "standard",
    "test": "npm run standard && npm run unit",
    "unit": "tape test/*.js",
    "update": "node -e \"require('./util/wordlists').update()\""
  },
  "version": "2.5.0"
}
